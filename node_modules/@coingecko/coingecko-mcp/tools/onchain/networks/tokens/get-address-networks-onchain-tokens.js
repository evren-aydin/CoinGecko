"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.tool = exports.metadata = void 0;
const filtering_1 = require("@coingecko/coingecko-mcp/filtering");
const types_1 = require("@coingecko/coingecko-mcp/tools/types");
exports.metadata = {
    resource: 'onchain.networks.tokens',
    operation: 'read',
    tags: [],
    httpMethod: 'get',
    httpPath: '/onchain/networks/{network}/tokens/{address}',
    operationId: 'token-data-contract-address',
};
exports.tool = {
    name: 'get_address_networks_onchain_tokens',
    description: "When using this tool, always use the `jq_filter` parameter to reduce the response size and improve performance.\n\nOnly omit if you're sure you don't need the data.\n\nThis endpoint allows you to **query specific token data based on the provided token contract address on a network**\n\n# Response Schema\n```json\n{\n  type: 'object',\n  properties: {\n    data: {\n      type: 'object',\n      properties: {\n        id: {\n          type: 'string'\n        },\n        attributes: {\n          type: 'object',\n          properties: {\n            address: {\n              type: 'string'\n            },\n            coingecko_coin_id: {\n              type: 'string'\n            },\n            decimals: {\n              type: 'integer'\n            },\n            fdv_usd: {\n              type: 'string'\n            },\n            image_url: {\n              type: 'string'\n            },\n            market_cap_usd: {\n              type: 'string'\n            },\n            name: {\n              type: 'string'\n            },\n            normalized_total_supply: {\n              type: 'string'\n            },\n            price_usd: {\n              type: 'string'\n            },\n            symbol: {\n              type: 'string'\n            },\n            total_reserve_in_usd: {\n              type: 'string'\n            },\n            total_supply: {\n              type: 'string'\n            },\n            volume_usd: {\n              type: 'object',\n              properties: {\n                h24: {\n                  type: 'string'\n                }\n              }\n            }\n          }\n        },\n        relationships: {\n          type: 'object',\n          properties: {\n            top_pools: {\n              type: 'object',\n              properties: {\n                data: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      id: {\n                        type: 'string'\n                      },\n                      type: {\n                        type: 'string'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    included: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          id: {\n            type: 'string'\n          },\n          attributes: {\n            type: 'object',\n            properties: {\n              address: {\n                type: 'string'\n              },\n              base_token_price_native_currency: {\n                type: 'string'\n              },\n              base_token_price_quote_token: {\n                type: 'string'\n              },\n              base_token_price_usd: {\n                type: 'string'\n              },\n              fdv_usd: {\n                type: 'string'\n              },\n              market_cap_usd: {\n                type: 'string'\n              },\n              name: {\n                type: 'string'\n              },\n              pool_created_at: {\n                type: 'string'\n              },\n              price_change_percentage: {\n                type: 'object',\n                properties: {\n                  h1: {\n                    type: 'string'\n                  },\n                  h24: {\n                    type: 'string'\n                  },\n                  h6: {\n                    type: 'string'\n                  },\n                  m15: {\n                    type: 'string'\n                  },\n                  m30: {\n                    type: 'string'\n                  },\n                  m5: {\n                    type: 'string'\n                  }\n                }\n              },\n              quote_token_price_base_token: {\n                type: 'string'\n              },\n              quote_token_price_native_currency: {\n                type: 'string'\n              },\n              quote_token_price_usd: {\n                type: 'string'\n              },\n              reserve_in_usd: {\n                type: 'string'\n              },\n              token_price_usd: {\n                type: 'string'\n              },\n              transactions: {\n                type: 'object',\n                properties: {\n                  h1: {\n                    type: 'object',\n                    properties: {\n                      buyers: {\n                        type: 'integer'\n                      },\n                      buys: {\n                        type: 'integer'\n                      },\n                      sellers: {\n                        type: 'integer'\n                      },\n                      sells: {\n                        type: 'integer'\n                      }\n                    }\n                  },\n                  h24: {\n                    type: 'object',\n                    properties: {\n                      buyers: {\n                        type: 'integer'\n                      },\n                      buys: {\n                        type: 'integer'\n                      },\n                      sellers: {\n                        type: 'integer'\n                      },\n                      sells: {\n                        type: 'integer'\n                      }\n                    }\n                  },\n                  m15: {\n                    type: 'object',\n                    properties: {\n                      buyers: {\n                        type: 'integer'\n                      },\n                      buys: {\n                        type: 'integer'\n                      },\n                      sellers: {\n                        type: 'integer'\n                      },\n                      sells: {\n                        type: 'integer'\n                      }\n                    }\n                  },\n                  m30: {\n                    type: 'object',\n                    properties: {\n                      buyers: {\n                        type: 'integer'\n                      },\n                      buys: {\n                        type: 'integer'\n                      },\n                      sellers: {\n                        type: 'integer'\n                      },\n                      sells: {\n                        type: 'integer'\n                      }\n                    }\n                  },\n                  m5: {\n                    type: 'object',\n                    properties: {\n                      buyers: {\n                        type: 'integer'\n                      },\n                      buys: {\n                        type: 'integer'\n                      },\n                      sellers: {\n                        type: 'integer'\n                      },\n                      sells: {\n                        type: 'integer'\n                      }\n                    }\n                  }\n                }\n              },\n              volume_usd: {\n                type: 'object',\n                properties: {\n                  h1: {\n                    type: 'string'\n                  },\n                  h24: {\n                    type: 'string'\n                  },\n                  h6: {\n                    type: 'string'\n                  },\n                  m15: {\n                    type: 'string'\n                  },\n                  m30: {\n                    type: 'string'\n                  },\n                  m5: {\n                    type: 'string'\n                  }\n                }\n              }\n            }\n          },\n          relationships: {\n            type: 'object',\n            properties: {\n              base_token: {\n                type: 'object',\n                properties: {\n                  data: {\n                    type: 'object',\n                    properties: {\n                      id: {\n                        type: 'string'\n                      },\n                      type: {\n                        type: 'string'\n                      }\n                    }\n                  }\n                }\n              },\n              dex: {\n                type: 'object',\n                properties: {\n                  data: {\n                    type: 'object',\n                    properties: {\n                      id: {\n                        type: 'string'\n                      },\n                      type: {\n                        type: 'string'\n                      }\n                    }\n                  }\n                }\n              },\n              quote_token: {\n                type: 'object',\n                properties: {\n                  data: {\n                    type: 'object',\n                    properties: {\n                      id: {\n                        type: 'string'\n                      },\n                      type: {\n                        type: 'string'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          type: {\n            type: 'string'\n          }\n        }\n      }\n    }\n  }\n}\n```",
    inputSchema: {
        type: 'object',
        properties: {
            network: {
                type: 'string',
            },
            address: {
                type: 'string',
            },
            include: {
                type: 'string',
                description: 'attributes to include',
                enum: ['top_pools'],
            },
            jq_filter: {
                type: 'string',
                title: 'jq Filter',
                description: 'A jq filter to apply to the response to include certain fields. Consult the output schema in the tool description to see the fields that are available.\n\nFor example: to include only the `name` field in every object of a results array, you can provide ".results[].name".\n\nFor more information, see the [jq documentation](https://jqlang.org/manual/).',
            },
        },
        required: ['network', 'address'],
    },
};
const handler = async (client, args) => {
    const { address, ...body } = args;
    return (0, types_1.asTextContentResult)(await (0, filtering_1.maybeFilter)(args, await client.onchain.networks.tokens.getAddress(address, body)));
};
exports.handler = handler;
exports.default = { metadata: exports.metadata, tool: exports.tool, handler: exports.handler };
//# sourceMappingURL=get-address-networks-onchain-tokens.js.map